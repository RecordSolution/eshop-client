{"version":3,"sources":["../../src/pages/admin/admindashboard/admindashboard.module.ts","../../src/pages/admin/admindashboard/admindashboard.ts","../../src/providers/orders/orders.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAyC;AACO;AACM;AAUtD;IAAA;IAAuC,CAAC;IAA3B,wBAAwB;QARpC,uEAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2EAAkB;aACnB;YACD,OAAO,EAAE;gBACP,sEAAe,CAAC,QAAQ,CAAC,2EAAkB,CAAC;aAC7C;SACF,CAAC;OACW,wBAAwB,CAAG;IAAD,+BAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;;;;;;ACZK;AAC0B;AACH;AAEH;AAC9D,sDAAsD;AAEtD;;;;;GAKG;AAOH;IAGE,4BAAmB,OAAsB,EAAS,SAAoB,EAAQ,YAA4B,EAAU,WAAwB;QAC1I,uDAAuD;QACvD,wBAAwB;QAFP,YAAO,GAAP,OAAO,CAAe;QAAS,cAAS,GAAT,SAAS,CAAW;QAAQ,iBAAY,GAAZ,YAAY,CAAgB;QAAU,gBAAW,GAAX,WAAW,CAAa;IAI5I,CAAC;IAED,2CAAc,GAAd;QAAA,iBAaC;QAZG,EAAE,EAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,MAAM,IAAE,CAAC,CAAC,EAAC;YAEtC,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE,CAAC,SAAS,CAAC,aAAG;gBACzC,mBAAmB;gBACnB,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC;YAC3B,CAAC,CAAC;QAKJ,CAAC;IAEL,CAAC;IAED,yCAAY,GAAZ,UAAa,MAAM;QACjB,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;IAExC,CAAC;IA3BU,kBAAkB;QAL9B,wEAAS,EAAE;QACX,wEAAS,CAAC;YACT,QAAQ,EAAE,qBAAqB;WACG;SACnC,CAAC;2BAI4I;OAHjI,kBAAkB,CA8B9B;IAAD,OAAC;;AAAA;SA9BY,kBAAkB,e;;;;;;;;;;;;;;;;;;;;;;;ACnBmB;AACP;AACe;AAC3B;AAI/B;IAEE,wBAAmB,IAAgB,EAAW,WAAwB;QAAnD,SAAI,GAAJ,IAAI,CAAY;QAAW,gBAAW,GAAX,WAAW,CAAa;QACpE,OAAO,CAAC,GAAG,CAAC,8BAA8B,CAAC,CAAC;QAC5C,IAAI,CAAC,SAAS,EAAE;IAClB,CAAC;IACF,kCAAS,GAAT,UAAU,KAAc;QAAxB,iBASE;QARC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,8BAA8B,CAAC;YACpD,GAAG,CAAC,UAAC,IAAS;YACZ,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;YACtC,KAAI,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YACtC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;QAGpB,CAAC,CAAC;IACJ,CAAC;IAfU,cAAc;QAD1B,yEAAU,EAAE;yCAGc,wEAAU,sBAAyB,oEAAU,oBAAV,oEAAU;OAF3D,cAAc,CAgB1B;IAAD,qBAAC;;CAAA;AAhB0B","file":"7.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { IonicPageModule } from 'ionic-angular';\r\nimport { AdmindashboardPage } from './admindashboard';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AdmindashboardPage,\r\n  ],\r\n  imports: [\r\n    IonicPageModule.forChild(AdmindashboardPage),\r\n  ],\r\n})\r\nexport class AdmindashboardPageModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/admin/admindashboard/admindashboard.module.ts","import { Component } from '@angular/core';\r\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\r\nimport { OrdersProvider} from '../../../providers/orders/orders';\r\nimport { Orders} from '../../../shared/models/orders';\r\nimport { OrderStore } from '../../../store/orders/orderstore';\r\n// import {} from '../../../store/orders/orderstore'; \r\n\r\n/**\r\n * Generated class for the AdmindashboardPage page.\r\n *\r\n * See https://ionicframework.com/docs/components/#navigation for more info on\r\n * Ionic pages and navigation.\r\n */\r\n\r\n@IonicPage()\r\n@Component({\r\n  selector: 'page-admindashboard',\r\n  templateUrl: 'admindashboard.html',\r\n})\r\nexport class AdmindashboardPage {\r\n\r\n  orders: Array<Orders>;\r\n  constructor(public navCtrl: NavController, public navParams: NavParams,public orderService: OrdersProvider, private ordersStore : OrderStore) {\r\n    // this.productService.getVehicles().subscribe(res => {\r\n    //   this.products = res\r\n   \r\n  }\r\n\r\n  ionViewDidLoad() {\r\n      if(this.ordersStore.myOrders.length==0){\r\n\r\n        this.orderService.getorders().subscribe(res =>{\r\n          // this.orders=res;\r\n          console.log(this.orders);\r\n        })\r\n\r\n\r\n\r\n\r\n      }\r\n    \r\n  }\r\n\r\n  filterOrders(status){\r\n    this.ordersStore.filterOrders(status);\r\n\r\n  }\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/admin/admindashboard/admindashboard.ts","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { OrderStore} from '../../store/orders/orderstore';\r\nimport 'rxjs/add/operator/map';\r\n\r\n\r\n@Injectable()\r\nexport class OrdersProvider {\r\n\r\n  constructor(public http: HttpClient , private ordersStore : OrderStore) {\r\n    console.log('Hello OrdesProvider Provider');\r\n    this.getorders()\r\n  }\r\n getorders(value?: string) {\r\n    return this.http.get('./../assets/json/orders.json').\r\n    map((data: any) => {\r\n      console.log('Orders', data.orders);\r\n   this.ordersStore.setOrders(data.orders);\r\n     return data.orders;\r\n     \r\n\r\n    })\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/orders/orders.ts"],"sourceRoot":""}